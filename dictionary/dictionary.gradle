
apply plugin: 'java'
apply plugin: 'maven'

apply plugin: 'checkstyle'
apply plugin: 'findbugs'


checkstyle {
  configFile = new File(rootDir, "config/checkstyle.xml")
  //sourceSets = [sourceSets.main, sourceSets.test]
  sourceSets = [sourceSets.main]
}

compileJava {
  //options.compilerArgs << '-Xlint:unchecked,deprecation'
    options.compilerArgs << '-Xlint:unchecked'
}

dependencies {
  compile project(':core')

  runtime "org.slf4j:jcl-over-slf4j:${depVersionSlf4J}"
  runtime "org.slf4j:jul-to-slf4j:${depVersionSlf4J}"
  runtime "org.slf4j:log4j-over-slf4j:${depVersionSlf4J}"
  
  testCompile "junit:junit:${depVersionJunit}"
  testCompile "org.springframework:spring-test:${depVersionSpringFramework}"
  testCompile project(':core').sourceSets.test.output
}

configurations {
  all*.exclude module: 'commons-logging'
  all*.exclude module: 'log4j'
  all*.exclude group: 'ch.qos.logback'
}


jar {
  baseName = rootProject.name
  appendix = project.name
}


uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: "file://$buildDir/repo")
      //repository(url: "file:///C:/gits/tkmtwo-mvn-repo/release")
    }
  }
}


findbugs {
  //toolVersion = "2.0.1"
  //sourceSets = [sourceSets.test]
  ignoreFailures = true
  reportsDir = file("$project.buildDir/reports/findbugs")
  effort = "max"
  reportLevel = "low"
  //reportLevel = "high"
  //visitors = ["FindSqlInjection", "SwitchFallthrough"]
  //omitVisitors = ["FindNonShortCircuit"]
  //includeFilter = file("$rootProject.projectDir/config/findbugs/includeFilter.xml")
  //excludeFilter = file("$rootProject.projectDir/config/findbugs/excludeFilter.xml")
}


findbugsMain {
  reports {
    xml { enabled = false }
    html {
      enabled = true
      destination "$project.buildDir/reports/findbugs/findbugsMain.html"
    }
  }
}

findbugsTest {
  reports {
    xml { enabled = false }
    html {
      enabled = true
      destination "$project.buildDir/reports/findbugs/findbugsTest.html"
    }
  }
}
